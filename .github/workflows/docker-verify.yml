name: Docker-verify
on:
  schedule:
    - cron: '45 4 * * *'
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    #permissions:
      # contents: write
      #packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      #id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Split fhempy Version
        id: split_fhempyV
        run: |
          echo "::set-output name=result::$(grep '^fhempy' requirements.txt | cut -d '=' -f3)"
      - name: Find String
        id: extract_image
        run: |
           echo "::set-output name=image_name::$(grep '^FROM' Dockerfile | cut -d ' ' -f2 | cut -d ':' -f1)"
           echo "::set-output name=image_version::$(grep '^FROM' Dockerfile | cut -d ' ' -f2 | cut -d ':' -f2)"

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2


      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build base image
        uses: docker/build-push-action@v3.1.1
        id: docker_build
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
          build-args: FHEMPY_V=${{ steps.split_fhempyV.outputs.result}}
          target: base
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}-base
            

      - name: Build for integration test amd64 
        uses: docker/build-push-action@v3.1.1
        id: docker_build
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          build-args: FHEMPY_V=${{ steps.split_fhempyV.outputs.result}}
          target: runtime
      - name: Run integration tests
        run: |
          ./scripts/test-integration.sh ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
